{"ast":null,"code":"var _jsxFileName = \"/Users/euna/Desktop/react_practice/react_beginner/todoapp/src/App.js\";\nimport React, { Component } from 'react';\nimport TodoListTemplate from './components/TodoListTemplate';\nimport Form from './components/Form';\nimport TodoItemList from './components/TodoItemList';\nimport Palette from './components/Palette';\nconst colors = ['#343a40', '#f03e3e', '#12b886', '#228ae6'];\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.id = 3;\n    this.state = {\n      input: '',\n      todos: [{\n        id: 0,\n        text: ' 리액트 소개',\n        checked: false\n      }, {\n        id: 1,\n        text: ' 리액트 소개',\n        checked: true\n      }, {\n        id: 2,\n        text: ' 리액트 소개',\n        checked: false\n      }],\n      color: '#343a40'\n    };\n\n    this.handleChange = e => {\n      this.setState({\n        input: e.target.value //input 의 다음 바뀔 값\n\n      });\n    };\n\n    this.handleCreate = () => {\n      const {\n        input,\n        todos,\n        color\n      } = this.state;\n      this.setState({\n        input: '',\n        todos: todos.concat({\n          id: this.id++,\n          text: input,\n          checked: false,\n          color\n        })\n      });\n    };\n\n    this.handleKeyPress = e => {\n      //엔터시 handleCreate호출\n      if (e.key === 'Enter') {\n        this.handleCreate();\n      }\n    };\n\n    this.handleToggle = id => {\n      const {\n        todos\n      } = this.state; //파라미터로 받은 id 를 가지고 몇번째 아이템인지 찾는다\n\n      const index = todos.findIndex(todo => todo.id === id);\n      const selected = todos[index]; //선택한 id를 가지고 있는 객체\n\n      const nextTodos = [...todos]; //todos배열을 복사해서 nextTodos에게!!\n\n      nextTodos[index] = { //선택한 id를 가진 객체를 복사하고, checked값을 덮어 쓰는것이여!!\n        ...selected,\n        checked: !selected.checked\n      };\n      this.setState({\n        todos: nextTodos\n      });\n    };\n\n    this.handleRemove = id => {\n      const {\n        todos\n      } = this.state;\n      this.setState({\n        todos: todos.filter(todo => todo.id !== id)\n      });\n    };\n\n    this.handleChangeColor = color => {\n      this.setState({\n        color\n      });\n    };\n  }\n\n  render() {\n    const {\n      input,\n      todos,\n      color\n    } = this.state;\n    const {\n      handleChange,\n      handleCreate,\n      handleKeyPress,\n      handleToggle,\n      handleRemove,\n      handleChangeColor\n    } = this;\n    return /*#__PURE__*/React.createElement(TodoListTemplate, {\n      Palette: /*#__PURE__*/React.createElement(Palette, {\n        colors: colors,\n        onSelect: handleChangeColor,\n        selected: color,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 38\n        }\n      }),\n      form: /*#__PURE__*/React.createElement(Form, {\n        value: input,\n        onKeyPress: handleKeyPress,\n        onChange: handleChange,\n        onCreate: handleCreate,\n        color: color,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 7\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(TodoItemList, {\n      todos: todos,\n      onToggle: handleToggle,\n      onRemove: handleRemove,\n      color: color,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/euna/Desktop/react_practice/react_beginner/todoapp/src/App.js"],"names":["React","Component","TodoListTemplate","Form","TodoItemList","Palette","colors","App","id","state","input","todos","text","checked","color","handleChange","e","setState","target","value","handleCreate","concat","handleKeyPress","key","handleToggle","index","findIndex","todo","selected","nextTodos","handleRemove","filter","handleChangeColor","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport TodoListTemplate from './components/TodoListTemplate';\nimport Form from './components/Form';\nimport TodoItemList from './components/TodoItemList';\nimport Palette from './components/Palette';\n\n\nconst colors = ['#343a40', '#f03e3e', '#12b886', '#228ae6']\n\nclass App extends Component {\n\n  id = 3 \n  state = {\n    input: '',\n    todos: [\n      { id: 0, text: ' 리액트 소개', checked: false },\n      { id: 1, text: ' 리액트 소개', checked: true },\n      { id: 2, text: ' 리액트 소개', checked: false }\n    ],\n    color : '#343a40'\n\n  }\n  handleChange = (e) => {\n    this.setState({\n      input : e.target.value //input 의 다음 바뀔 값\n    })\n  }\n\n  handleCreate = () => {\n    const { input, todos, color} = this.state\n    this.setState({\n      input: '',\n      todos: todos.concat({\n        id : this.id ++,\n        text: input,\n        checked: false,\n        color\n      })\n    })\n  }\n\n  handleKeyPress = (e) => { //엔터시 handleCreate호출\n    if(e.key === 'Enter'){\n      this.handleCreate();\n    }\n  }\n\n  handleToggle = (id) => {\n    const {todos} = this.state\n    //파라미터로 받은 id 를 가지고 몇번째 아이템인지 찾는다\n    const index = todos.findIndex(todo => todo.id === id)\n    const selected = todos[index] //선택한 id를 가지고 있는 객체\n    const nextTodos = [...todos] //todos배열을 복사해서 nextTodos에게!!\n\n    nextTodos[index] = { //선택한 id를 가진 객체를 복사하고, checked값을 덮어 쓰는것이여!!\n      ...selected,\n      checked: !selected.checked\n    }\n    this.setState({\n      todos: nextTodos\n    })\n  }\n\n  handleRemove = (id) => {\n    const {todos} = this.state;\n    this.setState({\n      todos: todos.filter(todo => todo.id !== id)\n    })\n  }\n\n  handleChangeColor = (color) => {\n    this.setState({\n      color\n    })\n  }\n\n  render() {\n    const {input,todos,color} = this.state\n    const{\n      handleChange,\n      handleCreate,\n      handleKeyPress,\n      handleToggle,\n      handleRemove,\n      handleChangeColor\n    } = this\n    return (\n      <TodoListTemplate  Palette = {(<Palette colors={colors} onSelect={handleChangeColor} selected={color}/>)} form={(\n      <Form\n        value={input}\n        onKeyPress={handleKeyPress}\n        onChange={handleChange}\n        onCreate={handleCreate}\n        color={color}\n      />\n      )}>\n        <TodoItemList todos={todos} onToggle={handleToggle} onRemove={handleRemove} color={color}/>\n      </TodoListTemplate>\n    );\n  }\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}