{"ast":null,"code":"var _jsxFileName = \"/Users/euna/Desktop/react_beginner/phone-book/src/components/PhoneInfo.js\";\n//각 전화번호 정보를 보여주는 컴포넌트\nimport React, { Component } from 'react';\n\nclass PhoneInfo extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      editing: false,\n      name: '',\n      phone: ''\n    };\n\n    this.handleRemove = () => {\n      const {\n        info,\n        onRemove\n      } = this.props;\n      onRemove(info.id);\n    };\n\n    this.handleToggleEdit = () => {\n      const {\n        editing\n      } = this.state;\n      this.setState({\n        editing: !editing\n      });\n    };\n\n    this.handleChange = e => {\n      const {\n        name,\n        value\n      } = e.target;\n      this.setState({\n        [name]: value\n      });\n    };\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    const {\n      info,\n      onUpdate\n    } = this.props;\n\n    if (!prevState.editing && this.state.editing) {\n      this.setState({\n        name: info.name,\n        phone: info.phone\n      });\n    }\n\n    if (prevState.editing && !this.state.editing) {\n      onUpdate(info.id, {\n        name: this.state.name,\n        phone: this.state.phone\n      });\n    }\n  }\n\n  shouldComponentUpdate(nextProps, nextState) {\n    // 수정 상태가 아니고, info 값이 같다면 리렌더링 안함\n    if (!this.state.editing && !nextState.editing && nextProps.info === this.props.info) {\n      return false;\n    } // 나머지 경우엔 리렌더링함\n\n\n    return true;\n  }\n\n  render() {\n    console.log('render PhoneInfo' + this.props.info.id);\n    const style = {\n      border: '1px solid black',\n      padding: '8px',\n      margin: '8px'\n    };\n    const {\n      editing\n    } = this.state;\n\n    if (editing) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        style: style,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(\"input\", {\n        value: this.state.name,\n        name: \"name\",\n        placeholder: \"\\uC774\\uB984\",\n        onChange: this.handleChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 21\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(\"input\", {\n        value: this.state.phone,\n        name: \"phone\",\n        placeholder: \"\\uC804\\uD654\\uBC88\\uD638\",\n        onChange: this.handleChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 21\n        }\n      })), /*#__PURE__*/React.createElement(\"button\", {\n        onClick: this.handleToggleEdit,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 19\n        }\n      }, \"\\uC801\\uC6A9\"), /*#__PURE__*/React.createElement(\"button\", {\n        onClick: this.handleRemove,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 19\n        }\n      }, \"\\uC0AD\\uC81C\"));\n    }\n\n    const {\n      name,\n      phone\n    } = this.props.info;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      style: style,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 22\n      }\n    }, name)), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 17\n      }\n    }, phone), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.handleToggleEdit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 17\n      }\n    }, \"\\uC218\\uC815\"), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.handleRemove,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 17\n      }\n    }, \"\\uC0AD\\uC81C\"));\n  }\n\n}\n\nPhoneInfo.defaultProps = {\n  info: {\n    name: '이름',\n    phone: '010-0000-0000',\n    id: 0\n  }\n};\nexport default PhoneInfo;","map":{"version":3,"sources":["/Users/euna/Desktop/react_beginner/phone-book/src/components/PhoneInfo.js"],"names":["React","Component","PhoneInfo","state","editing","name","phone","handleRemove","info","onRemove","props","id","handleToggleEdit","setState","handleChange","e","value","target","componentDidUpdate","prevProps","prevState","onUpdate","shouldComponentUpdate","nextProps","nextState","render","console","log","style","border","padding","margin","defaultProps"],"mappings":"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","sourcesContent":["//각 전화번호 정보를 보여주는 컴포넌트\nimport React, { Component } from 'react'\n\nclass PhoneInfo extends Component {\n    static defaultProps = {\n        info : {\n            name : '이름',\n            phone: '010-0000-0000',\n            id: 0\n        }\n    }\n\n    state = {\n        editing : false,\n        name:'',\n        phone:''\n    }\n\n    handleRemove = () => {\n        const {info, onRemove} = this.props\n        onRemove(info.id)\n    }\n\n    handleToggleEdit = () =>{\n        const {editing} = this.state\n        this.setState({editing:!editing})\n    }\n\n    handleChange = (e) => {\n        const {name,value} = e.target\n        this.setState({ [name] : value})\n    }\n\n    componentDidUpdate(prevProps,prevState){\n        const {info,onUpdate} = this.props\n        if(!prevState.editing && this.state.editing){\n            this.setState({\n                name: info.name,\n                phone:info.phone\n            })\n        }\n        if(prevState.editing && !this.state.editing){\n            onUpdate(info.id , {name: this.state.name, phone:this.state.phone})\n        }\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        // 수정 상태가 아니고, info 값이 같다면 리렌더링 안함\n        if (!this.state.editing  \n            && !nextState.editing\n            && nextProps.info === this.props.info) {\n          return false;\n        }\n        // 나머지 경우엔 리렌더링함\n        return true;\n      }\n      \n    render() {\n        console.log('render PhoneInfo' + this.props.info.id);\n        const style ={\n            border: '1px solid black',\n            padding: '8px',\n            margin: '8px'\n        }\n        const {editing} = this.state\n\n        if(editing){\n            return (\n                <div style={style}>\n                  <div>\n                    <input\n                      value={this.state.name}\n                      name=\"name\"\n                      placeholder=\"이름\"\n                      onChange={this.handleChange}\n                    />\n                  </div>\n                  <div>\n                    <input\n                      value={this.state.phone}\n                      name=\"phone\"\n                      placeholder=\"전화번호\"\n                      onChange={this.handleChange}\n                    />\n                  </div>\n                  <button onClick={this.handleToggleEdit}>적용</button>\n                  <button onClick={this.handleRemove}>삭제</button>\n                </div>\n              );\n        }\n        const {\n            name, phone\n        } = this.props.info\n        return (\n            <div style={style}>\n                <div><b>{name}</b></div>\n                <div>{phone}</div>\n                <button onClick={this.handleToggleEdit}>수정</button>\n                <button onClick={this.handleRemove}>삭제</button>\n            </div>\n        )\n    }\n}\n\nexport default PhoneInfo\n"]},"metadata":{},"sourceType":"module"}